apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gitlab-rss-sync.fullname" . }}
  labels:
    {{- include "gitlab-rss-sync.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "gitlab-rss-sync.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "gitlab-rss-sync.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config-volume
          persistentVolumeClaim:
            claimName: {{ include "gitlab-rss-sync.fullname" . }}-config
        {{- if .Values.secrets.enabled }}
        - name: secrets-volume
          secret:
            secretName: {{ include "gitlab-rss-sync.fullname" . }}-secrets
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: GITLAB_API_BASE_URL
              value: {{ .Values.env.GITLAB_API_BASE_URL | quote }}
            - name: GITLAB_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "gitlab-rss-sync.fullname" . }}-secrets
                  key: gitlab-api-token
            - name: CONFIG_DIR
              value: {{ .Values.env.CONFIG_DIR | quote }}
            - name: REDIS_URL
              value: {{ .Values.env.REDIS_URL | quote }}
            - name: REDIS_PASSWORD
              value: {{ .Values.env.REDIS_PASSWORD | quote }}
          ports:
            - name: http
              containerPort: {{ .Values.service.internalPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config-volume
              mountPath: {{ .Values.persistence.mountPath }}
            {{- if .Values.secrets.enabled }}
            - name: secrets-volume
              mountPath: /app/secrets
              readOnly: true
            {{- end }}
